{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMP8lsgI01/PnlrV0V34nFS",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/YundonAhn/DL23/blob/main/%EB%A6%AC%ED%84%B0%EB%9F%AC%EC%8B%9C%20%EC%A4%91%EA%B0%84%EA%B3%A0%EC%82%AC%20%EB%85%B8%ED%8A%B8\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "BRudMDTceetf"
      },
      "outputs": [],
      "source": [
        "#디지털 리터러시 중간고사 노트\n",
        "\n",
        "#1.함수설치, 함수정의 \n",
        "!pip install gTTS\n",
        "from gtts import gTTS\n",
        "from IPython.display import Audio\n",
        "\n",
        "def tts(text):\n",
        "  gtts_object = gTTS(text,lang = \"en\", slow = True) \n",
        "  gtts_object.save(\"myaudio.mp3\")\n",
        "  return Audio(\"myaudio.mp3\")\n",
        "\n",
        "  tts('Hello students')\n",
        "\n",
        "  #2. etts,ktts,ftts\n",
        "  def etts(text):\n",
        "  text_to_say = text\n",
        "\n",
        "  gtts_object = gTTS(text = text_to_say,\n",
        "                     lang = \"en\", tld = \"us\",\n",
        "                    slow = True)\n",
        "  \n",
        "  gtts_object.save(\"E-audio.mp3\")\n",
        "  return Audio(\"E-audio.mp3\")\n",
        "#######################\n",
        "\n",
        "def ktts(text):\n",
        "  text_to_say = text\n",
        "\n",
        "  gtts_object = gTTS(text = text_to_say,\n",
        "                     lang = \"ko\",\n",
        "                    slow = False)\n",
        "  \n",
        "  gtts_object.save(\"K-audio.mp3\")\n",
        "  return Audio(\"K-audio.mp3\")\n",
        "\n",
        "#######################\n",
        "\n",
        "def ftts(text):\n",
        "  text_to_say = text\n",
        "\n",
        "  gtts_object = gTTS(text = text_to_say,\n",
        "                     lang = \"fr\",\n",
        "                    slow = False)\n",
        "  \n",
        "  gtts_object.save(\"F-audio.mp3\")\n",
        "  return Audio(\"F-audio.mp3\")\n",
        "\n",
        "  #3. dropbox\n",
        "  Language = \"kr\" #@param = [\"en\", \"kr\"]\n",
        "\n",
        "mytext = input(\"Type text: \")\n",
        "if Language == \"en\":\n",
        "  etts(mytext)\n",
        "  myaudio = \"E-audio.mp3\"\n",
        "elif Language == \"kr\":\n",
        "  ktts(mytext)\n",
        "  myaudio = \"K-audio.mp3\"\n",
        "\n",
        "Audio(myaudio)\n",
        "\n",
        "#4. dropbox 더하기 빼기 곱하기 나누기\n",
        "func = \"subtract\" #@param = [\"add\",\"subtract\",\"multiply\",\"divide\"]\n",
        "digits = input(\"Type two numbers: (e.g., 3,4)\")\n",
        "digitsplit = digits.split(',')\n",
        "d1 = int(digitsplit[0])\n",
        "d2 = int(digitsplit[1])\n",
        "\n",
        "if func == \"add\":\n",
        "  result = add(d1,d2)\n",
        "  text = \"The addition of %d and %d equals %d.\"%(d1,d2,result)\n",
        "elif func == \"subtract\":\n",
        "  result = subtract(d1,d2)\n",
        "  text = \"If you subtract %d from %d, you get %d.\"%(d2,d1,result)\n",
        "elif func == \"divide\":\n",
        "  result = divide(d1,d2)\n",
        "  text = \"When you divide %d by %d, you get %d.\"%(d1,d2,result)\n",
        "elif func == \"multiply\":\n",
        "  result = multiply(d1,d2)\n",
        "  text = \"%d multiplied by %d is %d.\"%(d1,d2,result)\n",
        "\n",
        "print(text)\n",
        "tts(text)\n",
        "Audio(\"myaudio.mp3\")\n",
        "\n",
        "#5. type = string인지 integer인지 알려줌\n",
        "#6. str은 문자 int는 숫자 int를 str로 바꾸는건 가능 str을 int로 바꾸는거 불가능\n",
        "#7. random module\n",
        "import random\n",
        "random.randint(1, 10) #random.randint(x,y)는 함수이므로 문법대로 사용해야 함.\n",
        "#8. List\n",
        "range(x,y)\n",
        "x3 = range(1,10)\n",
        "list(x3)  #list(), range(1,10)\n",
        "     \n",
        "[1, 2, 3, 4, 5, 6, 7, 8, 9]\n",
        "\n",
        "x4 = \"John\"\n",
        "list(x4)\n",
        "     \n",
        "['J', 'o', 'h', 'n']\n",
        "\n",
        "#9. ipa랑 gpt가 뭐의 약자인지 \n",
        "mydict = {\"API\":\"Application Programming Interface\", \"GPT\":\"Generative Pretrained Transformer\"}\n",
        "mydict['API']\n",
        "     \n",
        "'Application Programming Interface'\n",
        "\n",
        "mydict['GPT']\n",
        "     \n",
        "'Generative Pretrained Transformer'\n",
        "\n",
        "class_size = {\"Class A\": 25, \"Class B\": 30, \"Class C\": 32}\n",
        "class_size['Class C']\n",
        "     \n",
        "32\n",
        "\n",
        "#10. input\n",
        "yournumber = input()\n",
        "\n",
        "#11. print() 함수 배우기\n",
        "print(\"대한민국\")\n",
        "\n",
        "a2 = \"화이팅!\"  # a1: variable(변수)\n",
        "print(a2)\n",
        "print(a2*10)\n",
        "print(\"화이팅 10번 합시다: \", a2*10)\n",
        "a2\n",
        "#---------------------------------------------------\n",
        "print(a2)\n",
        "print(\"=\"*30)\n",
        "a1=random.randint(1,10)\n",
        "print(\"Random integer between 1 and 10:\", a1)\n",
        "     \n",
        "화이팅!\n",
        "==============================\n",
        "Random integer between 1 and 10: 7\n",
        "\n",
        "#12. 시간 계산하기 \n",
        "day = 24\n",
        "num_day = input(\"How many days?:\")\n",
        "hours = day*int(num_day)\n",
        "print(\"The total hours passed since Mary met John are: \", hours, \"hours.\")\n",
        "     \n",
        "How many days? 5\n",
        "The total hours passed since Mary met John are:  120 hours.\n",
        "\n",
        "#13. strip 간격 줄이기\n",
        "w1 = \" Mary is friendly. \"\n",
        "w1\n",
        "     \n",
        "' Mary is friendly. '\n",
        "\n",
        "w1.strip()\n",
        "     \n",
        "'Mary is friendly.'\n",
        "\n",
        "#14. split 나누기\n",
        "  w1 = \"Mary is friendly.\"\n",
        "w1.split()\n",
        "     \n",
        "['Mary', 'is', 'friendly.']\n",
        "\n",
        "w2 = \"out-of-date\"\n",
        "w2.split('-')\n",
        "     \n",
        "['out', 'of', 'date']\n",
        "\n",
        "w1 = \"Mary\"\n",
        "w2 = \"is\"\n",
        "w3 = \"friendly\"\n",
        "     \n",
        "\n",
        "wordlist = [w1, w2, w3]\n",
        "wordlist\n",
        "     \n",
        "['Mary', 'is', 'friendly']\n",
        "\n",
        "w2 = \"out-of-date\"\n",
        "mysplit = w2.split('-')\n",
        "mysplit\n",
        "     \n",
        "['out', 'of', 'date']\n",
        "\n",
        "#15. join 합치기 \"\" 해야함\n",
        "' '.join(wordlist)\n",
        "     \n",
        "'Mary is friendly'\n",
        "\n",
        "'-'.join(wordlist)\n",
        "     \n",
        "'Mary-is-friendly'\n",
        "\n",
        "' '.join(mysplit)\n",
        "     \n",
        "'out of date'\n",
        "\n",
        "#16. lower, upper\n",
        "w1.lower()\n",
        "     \n",
        "'mary'\n",
        "\n",
        "w1.upper()\n",
        "     \n",
        "'MARY'\n",
        "\n",
        "#17. string index\n",
        "len(w1)\n",
        "     \n",
        "4\n",
        "\n",
        "w1[0] \n",
        "     \n",
        "'M'\n",
        "\n",
        "w1[-1]\n",
        "     \n",
        "'y'\n",
        "\n",
        "w1[0:]\n",
        "     \n",
        "'Mary'\n",
        "\n",
        "w1[:]\n",
        "     \n",
        "'Mary'\n",
        "\n",
        "w1[1:3]\n",
        "     \n",
        "'ar'\n",
        "\n",
        "w = \"mary\"\n",
        "ini = w[0].upper()\n",
        "ini\n",
        "w = ini + w[1:]\n",
        "print(w)\n",
        "     \n",
        "Mary\n",
        "\n",
        "#18. 어순 바꾸기 Is Mary friendly\n",
        " DIY: Convert a statement to a yes-no question (e.g., Mary is smart. Tom is smiling. Jane is late.)\n",
        "\n",
        "\n",
        "w = \"Mary is friendly\"\n",
        "y= w.split()\n",
        "w1 = y[0]\n",
        "w2 = y[1]\n",
        "w3 = y[2]\n",
        "\n",
        "nw1 = w2[0].upper() + w2[1:]\n",
        "\n",
        "s = nw1 + \" \" + w1 + \" \" + w3\n",
        "\n",
        "s1 = s\n",
        "s2 = s1 + \"?\"\n",
        "s2\n",
        "\n",
        "\n",
        "\n",
        "     \n",
        "'Is Mary friendly?'\n",
        "\n"
      ]
    }
  ]
}